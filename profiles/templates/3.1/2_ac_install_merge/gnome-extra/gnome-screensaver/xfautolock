# Calculate path=/usr/bin chmod=0755
#!/bin/bash

is_monitor_on() {
	# проверяем используется DPMS (возможно отключен через smplayer) и монитор выключен (Standby,Suspend,Off)
	xset -q | grep -q "DPMS is Enabled" && xset -q | grep Monitor | grep -q On
}

screensaver_status() {
	# получить блокирован или нет сеанс через gnome-screensaver
	# timeout используется, так как при получение состояния может быть
	# зависание до активанции экрана блокировки сеанса
	res=$(LANG=C timeout -k 5 5 qdbus org.gnome.ScreenSaver / GetActive)
	# if screensaver is not active and qdbus command work without hanging
	if [[ $? -eq 0 ]]
	then
		echo $res
	else
		echo timeout
	fi
}

getuserparam() {
    local section=$1
    local param=$2
    sed -nr "/\[${section}\]/{:s;n;s/${param}\s*=\s*(\w+)/\1/p;/\[/b;bs}" $HOME/.calculate/ini.env
}

OFFTIME=0
# демон работает пока xset выдает информацию (работает X server)
while xset -q &>/dev/null
do
	sleep 1
	# не используем блокировку если у пользователя .calculate/ini.env не включена автоблокировка (lock = on)
	[[ "$(getuserparam main lock)" == "on" ]] || continue
	# включить таймер автоблокировки
	# таймер выключается если сессия не активна
	is_monitor_on && TIMER=1
	# 
	if ! is_monitor_on
	then
		# блокировка сессии только если пользовательская сессия активна
		if /usr/bin/ck-list-sessions | grep -A 5 "unix-user = '$(id -u)'" | grep -q "active = TRUE"
		then
			# запускать блокировку через 5 секунд после выключения монитора
			if [[ $OFFTIME -gt 5 ]]
			then
				if [[ "$(screensaver_status)" == "false" ]]
				then
					# заблокировать текущий сеанс
					/usr/bin/xflock4
				else
					# сбросить таймер (для исключения автоблокирования сеанса сразу же после разблокировки)
					OFFTIME=0
				fi
			fi
			[[ -n "$TIMER" ]] && (( OFFTIME++ ))
		else
			# выключить таймер
			OFFTIME=0
			TIMER=
		fi
	else
		# сбросить время таймера, т.к. монитор включен
		OFFTIME=0
	fi
done
