diff --git data/calculate-builder data/calculate-builder
index ecdece5..cabfa2a 100644
--- data/calculate-builder
+++ data/calculate-builder
@@ -58,19 +58,18 @@ add_autoload_modules(){
 	# get root type
 	local roottype=`variable_value os_root_type`
 	# if modules have not added yet
-	if ! find_string_modules;
+	if find_string_modules;
 	then
-		ebegin "Added rules for cpu frequency"
-		# detect cpufreq modules
-		get_cpufreq_modules
-		# if root type is hdd
-		if [[ $roottype == "hdd" ]]
-		then
-			# append config string to conf file
-			echo ${KERNEL_VERSION_CONF}=\"${MODULES_STRING}\" >> ${CONF_FILE}
-		fi
-	else
-		ebegin "Cpu frequency modules already detected"
+		sed -i "/${KERNEL_VERSION_CONF}=/d" ${CONF_FILE}
+	fi
+	ebegin "Added rules for cpu frequency"
+	# detect cpufreq modules
+	get_cpufreq_modules
+	# if root type is hdd
+	if [[ $roottype == "hdd" ]]
+	then
+		# append config string to conf file
+		echo ${KERNEL_VERSION_CONF}=\"${MODULES_STRING}\" >> ${CONF_FILE}
 	fi
 }
 
@@ -82,8 +81,14 @@ start() {
 stop() {
 	# remove calculate-builder from autorun
 	local roottype=`variable_value os_root_type`
-	if [[ $roottype == "hdd" ]] && rc-config list boot | grep -q calculate-builder
+	if [[ $roottype == "hdd" ]] 
 	then
-		rc-update del calculate-builder boot
+		for runlevel in boot default
+		do
+			if rc-config list $runlevel | grep -q calculate-builder
+			then
+				rc-update del calculate-builder $runlevel
+			fi
+		done
 	fi
 }
diff --git pym/cl_builder.py pym/cl_builder.py
index df1e212..de3d91e 100644
--- pym/cl_builder.py
+++ pym/cl_builder.py
@@ -582,6 +582,8 @@ class cl_builder(color_print):
             return map(lambda x: path.join("var/lib/layman/calculate",x),
                   filter(lambda x: not x in ("distfiles", "eclass", ".git","profiles"),
                   listDirectory(overlayPath))) + \
+                  [pathJoin(sourceDirectory,
+                    "var/lib/layman/calculate/profiles/templates/deprecated")] + \
                   map(lambda x: path.join("usr/portage",x),
                   filter(lambda x: not x in ("distfiles", "eclass", ".git","profiles"),
                   listDirectory(portagePath)))
@@ -645,7 +647,7 @@ class cl_builder(color_print):
         self.printByResult(True)
         if self.clVars.Get('cl_builder_isohybrid_set') == 'on':
             self.printMessageForTest(_("Performing isohybrid"))
-            processIsoHybrid = process("/usr/bin/isohybrid",isoFile)
+            processIsoHybrid = process("/usr/bin/isohybrid","--uefi",isoFile)
             self.printByResult(processIsoHybrid.success())
         self.printMessageForTest(_("Generating the list of installed packages"))
         self.printByResult(self.createPackageList(sourceDirectory,
